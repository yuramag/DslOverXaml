<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:DslOverXamlDemo.Rules.ViewModel"
                    xmlns:controls="clr-namespace:DslOverXamlDemo.Rules.Controls"
                    xmlns:model="clr-namespace:DslOverXamlDemo.Rules.Model">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Styles.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <!-- Designer -->

    <DataTemplate DataType="{x:Type vm:RuleDesigner}">
        <UserControl>
            <DockPanel>
                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Visibility="{Binding Model.HasValue, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                    <ItemsControl DockPanel.Dock="Top" Style="{StaticResource RulesToolBar}">
                        <Menu>
                            <MenuItem Header="Set Rule" ItemsSource="{x:Static model:ModelMetadataManager.AllRules}" ItemTemplate="{StaticResource ModelsMenuItemsStyle}">
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Command" Value="{Binding DataContext.SetRuleCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding ModelType}"/>
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </Menu>
                    </ItemsControl>
                </StackPanel>
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <StackPanel HorizontalAlignment="Left" Visibility="{Binding Model.HasValue, Converter={StaticResource BoolToVisibilityConverter}}">
                        <ContentPresenter Content="{Binding Model.ViewModel}">
                            <ContentPresenter.Resources>
                            <Style TargetType="{x:Type controls:Gadget}">
                                <Setter Property="Command" Value="{Binding DataContext.SetRuleCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
                                <Setter Property="CommandParameter" Value="{x:Null}"/>
                            </Style>
                        </ContentPresenter.Resources>
                        </ContentPresenter>
                    </StackPanel>
                </ScrollViewer>
            </DockPanel>
        </UserControl>
    </DataTemplate>

    <!-- Rule Views -->

    <DataTemplate DataType="{x:Type vm:EmptyRuleViewModel}">
        <controls:Gadget GadgetType="Rule"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:RuleSetViewModel}">
        <controls:Gadget GadgetType="Rule">
            <DockPanel>
                <StackPanel DockPanel.Dock="Bottom">
                    <ItemsControl Style="{StaticResource RulesToolBar}">
                        <Button Content="Clear Rules" Command="{Binding ClearRulesCommand}"/>
                        <Menu>
                            <MenuItem Header="Add Rule" ItemsSource="{x:Static model:ModelMetadataManager.AllRules}" ItemTemplate="{StaticResource ModelsMenuItemsStyle}">
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Command" Value="{Binding DataContext.AddRuleCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding ModelType}"/>
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </Menu>
                    </ItemsControl>
                </StackPanel>
                <ItemsControl ItemsSource="{Binding Rules}" Margin="5">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentPresenter Content="{Binding ViewModel}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type controls:Gadget}">
                                        <Setter Property="Command" Value="{Binding DataContext.DeleteRuleCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding Model}"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DockPanel>
        </controls:Gadget>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ConditionRuleViewModel}">
        <controls:Gadget GadgetType="Rule">
            <StackPanel>
                <StackPanel>
                    <ItemsControl Style="{StaticResource RulesToolBar}" Visibility="{Binding Condition.HasValue, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                        <Menu>
                            <MenuItem Header="Set Condition" ItemsSource="{x:Static model:ModelMetadataManager.AllConditions}" ItemTemplate="{StaticResource ModelsMenuItemsStyle}">
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Command" Value="{Binding DataContext.SetConditionCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding ModelType}"/>
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </Menu>
                    </ItemsControl>

                    <StackPanel Visibility="{Binding Condition.HasValue, Converter={StaticResource BoolToVisibilityConverter}}">
                        <ContentPresenter Content="{Binding Condition.ViewModel}">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type controls:Gadget}">
                                    <Setter Property="Command" Value="{Binding DataContext.SetConditionCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                    <Setter Property="CommandParameter" Value="{x:Null}"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </StackPanel>
                </StackPanel>

                <StackPanel>
                    <ItemsControl Style="{StaticResource RulesToolBar}" Visibility="{Binding Rule.HasValue, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                        <Menu>
                            <MenuItem Header="Set Rule" ItemsSource="{x:Static model:ModelMetadataManager.AllRules}" ItemTemplate="{StaticResource ModelsMenuItemsStyle}">
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Command" Value="{Binding DataContext.SetRuleCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding ModelType}"/>
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </Menu>
                    </ItemsControl>

                    <StackPanel Visibility="{Binding Rule.HasValue, Converter={StaticResource BoolToVisibilityConverter}}">
                        <ContentPresenter Content="{Binding Rule.ViewModel}">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type controls:Gadget}">
                                    <Setter Property="Command" Value="{Binding DataContext.SetRuleCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                    <Setter Property="CommandParameter" Value="{x:Null}"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </controls:Gadget>
    </DataTemplate>
    
    <ControlTemplate x:Key="ValueBasedRuleView">
        <controls:Gadget GadgetType="Rule">
            <DockPanel>
                <StackPanel DockPanel.Dock="Top" Visibility="{Binding Value.HasValue, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                    <ItemsControl Style="{StaticResource RulesToolBar}">
                        <Menu Focusable="False">
                            <MenuItem Header="Set Value" ItemsSource="{x:Static model:ModelMetadataManager.AllValues}" ItemTemplate="{StaticResource ModelsMenuItemsStyle}">
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Command" Value="{Binding DataContext.SetValueCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding ModelType}"/>
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </Menu>
                    </ItemsControl>
                </StackPanel>

                <StackPanel Visibility="{Binding Value.HasValue, Converter={StaticResource BoolToVisibilityConverter}}">
                    <ContentPresenter Content="{Binding Value.ViewModel}">
                        <ContentPresenter.Resources>
                            <Style TargetType="{x:Type controls:Gadget}">
                                <Setter Property="Command" Value="{Binding DataContext.SetValueCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                <Setter Property="CommandParameter" Value="{x:Null}"/>
                            </Style>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </StackPanel>
            </DockPanel>
        </controls:Gadget>
    </ControlTemplate>

    <DataTemplate DataType="{x:Type vm:ApplyAbsoluteDiscountViewModel}">
        <ContentControl Template="{StaticResource ValueBasedRuleView}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ApplyAdditiveDiscountViewModel}">
        <ContentControl Template="{StaticResource ValueBasedRuleView}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ApplyMultiplicativeDiscountViewModel}">
        <ContentControl Template="{StaticResource ValueBasedRuleView}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ApplyPercentDiscountViewModel}">
        <ContentControl Template="{StaticResource ValueBasedRuleView}"/>
    </DataTemplate>

    <!-- Condition Views -->

    <ControlTemplate x:Key="ConditionSetView">
        <controls:Gadget GadgetType="Condition">
            <DockPanel>
                <StackPanel DockPanel.Dock="Bottom">
                    <ItemsControl Style="{StaticResource RulesToolBar}">
                        <Button Content="Clear" Command="{Binding ClearConditionsCommand}"/>
                        <Menu Focusable="False" Background="{x:Null}">
                            <MenuItem Header="Add Condition" ItemsSource="{x:Static model:ModelMetadataManager.AllConditions}" ItemTemplate="{StaticResource ModelsMenuItemsStyle}">
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Command" Value="{Binding DataContext.AddConditionCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding ModelType}"/>
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </Menu>
                    </ItemsControl>
                </StackPanel>
                <ItemsControl ItemsSource="{Binding Conditions}" Margin="5">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentPresenter Content="{Binding ViewModel}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type controls:Gadget}">
                                        <Setter Property="Command" Value="{Binding DataContext.DeleteConditionCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding Model}"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DockPanel>
        </controls:Gadget>
    </ControlTemplate>

    <DataTemplate DataType="{x:Type vm:AllMatchViewModel}">
        <ContentControl Template="{StaticResource ConditionSetView}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:AnyMatchViewModel}">
        <ContentControl Template="{StaticResource ConditionSetView}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:TrueViewModel}">
        <controls:Gadget GadgetType="Condition"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:FalseViewModel}">
        <controls:Gadget GadgetType="Condition"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:NotViewModel}">
        <controls:Gadget>
            <DockPanel>
                <StackPanel DockPanel.Dock="Top" Visibility="{Binding Condition.HasValue, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                    <ItemsControl Style="{StaticResource RulesToolBar}">
                        <Menu Focusable="False">
                            <MenuItem Header="Set Condition" ItemsSource="{x:Static model:ModelMetadataManager.AllConditions}" ItemTemplate="{StaticResource ModelsMenuItemsStyle}">
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Command" Value="{Binding DataContext.SetConditionCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding ModelType}"/>
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </Menu>
                    </ItemsControl>
                </StackPanel>

                <StackPanel Visibility="{Binding Condition.HasValue, Converter={StaticResource BoolToVisibilityConverter}}">
                    <ContentPresenter Content="{Binding Condition.ViewModel}">
                        <ContentPresenter.Resources>
                            <Style TargetType="{x:Type controls:Gadget}">
                                <Setter Property="Command" Value="{Binding DataContext.SetConditionCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                <Setter Property="CommandParameter" Value="{x:Null}"/>
                            </Style>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </StackPanel>
            </DockPanel>
        </controls:Gadget>
    </DataTemplate>

    <ControlTemplate x:Key="RangeConditionView">
        <controls:Gadget GadgetType="Condition">
            <StackPanel>
                <ItemsControl Style="{StaticResource RulesToolBar}">
                    <TextBlock Text="From:"/>
                    <controls:EditableTextBoxControl Text="{Binding From, Mode=TwoWay}"/>
                    <TextBlock Text="To:"/>
                    <controls:EditableTextBoxControl Text="{Binding To, Mode=TwoWay}"/>
                </ItemsControl>
            </StackPanel>
        </controls:Gadget>
    </ControlTemplate>

    <DataTemplate DataType="{x:Type vm:CustomerAgeViewModel}">
        <ContentControl Template="{StaticResource RangeConditionView}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:OrderDateViewModel}">
        <ContentControl Template="{StaticResource RangeConditionView}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:OrderItemsCountViewModel}">
        <ContentControl Template="{StaticResource RangeConditionView}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ProductPriceViewModel}">
        <ContentControl Template="{StaticResource RangeConditionView}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ProductQuantityViewModel}">
        <ContentControl Template="{StaticResource RangeConditionView}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ProductCategoryViewModel}">
        <controls:Gadget GadgetType="Condition">
            <StackPanel>
                <ItemsControl Style="{StaticResource RulesToolBar}">
                    <TextBlock Text="Value:"/>
                    <controls:EditableTextBoxControl Text="{Binding Value, Mode=TwoWay}"/>
                </ItemsControl>
            </StackPanel>
        </controls:Gadget>
    </DataTemplate>

    <!-- Value Views -->

    <DataTemplate DataType="{x:Type vm:ConstantViewModel}">
        <controls:Gadget GadgetType="Value">
            <StackPanel>
                <ItemsControl Style="{StaticResource RulesToolBar}">
                    <TextBlock Text="Value:"/>
                    <controls:EditableTextBoxControl Text="{Binding Value, Mode=TwoWay}"/>
                </ItemsControl>
            </StackPanel>
        </controls:Gadget>
    </DataTemplate>
    
    <ControlTemplate x:Key="ValueWithDefaultValueView">
        <controls:Gadget GadgetType="Value">
            <DockPanel>
                <StackPanel DockPanel.Dock="Top" Visibility="{Binding DefaultValue.HasValue, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                    <ItemsControl Style="{StaticResource RulesToolBar}">
                        <Menu Focusable="False">
                            <MenuItem Header="Set Default Value" ItemsSource="{x:Static model:ModelMetadataManager.AllValues}" ItemTemplate="{StaticResource ModelsMenuItemsStyle}">
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="Command" Value="{Binding DataContext.SetDefaultValueCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding ModelType}"/>
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </Menu>
                    </ItemsControl>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Visibility="{Binding DefaultValue.HasValue, Converter={StaticResource BoolToVisibilityConverter}}">
                    <ItemsControl Style="{StaticResource RulesToolBar}">
                        <TextBlock Text="Default Value:" Margin="10"/>
                    </ItemsControl>

                    <ContentPresenter Content="{Binding DefaultValue.ViewModel}">
                        <ContentPresenter.Resources>
                            <Style TargetType="{x:Type controls:Gadget}">
                                <Setter Property="Command" Value="{Binding DataContext.SetDefaultValueCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:Gadget}}}"/>
                                <Setter Property="CommandParameter" Value="{x:Null}"/>
                            </Style>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </StackPanel>
            </DockPanel>
        </controls:Gadget>
    </ControlTemplate>

    <DataTemplate DataType="{x:Type vm:ProductClearancePercentViewModel}">
        <ContentControl Template="{StaticResource ValueWithDefaultValueView}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ProductTodaysPriceViewModel}">
        <ContentControl Template="{StaticResource ValueWithDefaultValueView}"/>
    </DataTemplate>

</ResourceDictionary>